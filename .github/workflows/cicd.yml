name: Spring CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      #1. Java & Docker setting
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Set YML
        run: |
            mkdir -p src/main/resources
            echo "${{ secrets.APPLICATION_YAML }}" | base64 --decode > src/main/resources/application.yaml
            find src

      #2. SpringBoot application build 
      - name: Build with Gradle Wrapper
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      #3. Docker hub login 
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #4. Docker build & push 
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
          
  CD:
    needs: [ CI ]
    runs-on: ubuntu-latest

    #5. The latest docker image pull & container run 
    steps:
      - name: Docker image pull and Container run on Server 1
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOYMENT_HOST_1 }}
        username: ${{ secrets.DEPLOYMENT_USERNAME }}
        password: ${{ secrets.DEPLOYMENT_PASSWORD }}
        script: |
          docker stop koschool-server
          docker rm koschool-server
          docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
          docker run -d -p 8080:8080 --name koschool-server ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}

    - name: Docker image pull and Container run on Server 2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOYMENT_HOST_2 }}
        username: ${{ secrets.DEPLOYMENT_USERNAME }}
        password: ${{ secrets.DEPLOYMENT_PASSWORD }}
        script: |
          docker stop koschool-server
          docker rm koschool-server
          docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
          docker run -d -p 8080:8080 --name koschool-server ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
